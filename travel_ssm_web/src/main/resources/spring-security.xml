<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security  http://www.springframework.org/schema/security/spring-security.xsd">

    <!--配置不过滤的资源-->
    <security:http security="none" pattern="/login.jsp"/>
    <security:http security="none" pattern="/failure.jsp"/>
    <security:http security="none" pattern="/css/**"/>
    <security:http security="none" pattern="/img/**"/>
    <security:http security="none" pattern="/js/**"/>
    <security:http security="none" pattern="/plugins/**"/>

    <security:http auto-config="true" use-expressions="true">
        <!--定义过滤规则：对pattern里的请求进行过滤，需要有access里的一个其中角色才能访问成功-->
        <security:intercept-url pattern="/**" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
        <!--定义不同情况下具体跳转的路径和页面-->
        <security:form-login login-processing-url="/login.do" login-page="/login.jsp"
                             username-parameter="username" password-parameter="password"
                             authentication-failure-url="/failure.jsp" authentication-success-forward-url="/WEB-INF/pages/index.jsp"
                             default-target-url="/WEB-INF/pages/index.jsp"
        />
        <!-- 关闭CSRF,默认是开启的 -->
        <security:csrf disabled="true" />
        <!-- 退出 -->
        <security:logout invalidate-session="true" logout-url="/logout.do" logout-success-url="/login.jsp" />
    </security:http>

    <!--配置用户-->
    <security:authentication-manager>
        <security:authentication-provider user-service-ref="userService">
            <!-- 配置加密的方式-->
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>

    <!-- 配置加密类 -->
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

</beans>